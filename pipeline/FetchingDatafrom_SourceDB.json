{
	"name": "FetchingDatafrom_SourceDB",
	"properties": {
		"activities": [
			{
				"name": "OldWatermarkValue",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select TableName, Watermarkvalue as OldWatermarkValue from [dbo].[watermarktable] where TableName = 'orders'",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DataSet_targetDB_watermark",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "NewWatermarkValue",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select max(InsertDateTime) as newwatermarkvalue from [dbo].[orders]",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DataSet_sourceDB",
						"type": "DatasetReference",
						"parameters": {
							"TableName": {
								"value": "@pipeline().parameters.TableName",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "Copy orders data",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "OldWatermarkValue",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "NewWatermarkValue",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "\nselect * from [dbo].[orders] where InsertDateTime > '@{activity('OldWatermarkValue').output.firstRow.OldWatermarkValue}' AND InsertDateTime <= '@{activity('NewWatermarkValue').output.firstRow.NewWatermarkValue}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DataSet_sourceDB",
						"type": "DatasetReference",
						"parameters": {
							"TableName": {
								"value": "@pipeline().parameters.TableName",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DataSet_targetDB_Orders",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "UpdatewatremarkTable",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy orders data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spSetWatermark]",
					"storedProcedureParameters": {
						"NewTime": {
							"value": {
								"value": "@activity('Newwatermarkvalue').output.firstRow.Newwatermarkvalue",
								"type": "Expression"
							},
							"type": "Datetime"
						},
						"TableName": {
							"value": {
								"value": "@activity('Oldwatermarkvalue').output.firstRow.TableName",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LinkService_targetDB",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"TableName": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2025-06-30T19:38:11Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}